pipeline {
    agent {
        node {
            label 'docker-ansible'
            }
        }
    parameters {

    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'Tag', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/DataCommons_Automation')

    string(defaultValue: "Commons_Automation.prj", 
        description: 'Enter the Katalon Project file (include the path relative to the repo root):', 
        name: 'KatalonPrj')

    string(defaultValue: "Test Suites/Canine_TestSuite", 
        description: 'Enter the Katalon Suite Path (not including the test suite file):', 
        name: 'KatalonSuite')

    extendedChoice( 
        name: 'Browser', 
        defaultValue: 'Firefox', 
        description: 'Choose the browser (headless) to use', 
        type: 'PT_SINGLE_SELECT',
        value: 'Chrome,Firefox' )
		
	extendedChoice( 
        name: 'Profile', 
        defaultValue: 'QA_ICDC', 
        description: 'Choose the profile to use', 
        type: 'PT_SINGLE_SELECT',
        value: 'QA_ICDC,QA_CTDC' )

        }
    // options {
    // 	ansiColor('xterm')
    // }
    tools {
        jdk 'Default' 
        }
    stages{
        stage('checkout'){
            steps {

                checkout([$class: 'GitSCM', 
                    branches: [[name: "${params.Tag}"]], 
                    doGenerateSubmoduleConfigurations: false,
					extensions: [],
					submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/CBIIT/DataCommons_Automation']]])

                dir('icdc-devops'){
                    git branch: 'master',
                    url: 'https://github.com/michael-fleming/DevOps.git'}

                }
            }
		stage('set Profile'){
		    environment {
                KATALON_PRJ         =   "${params.KatalonPrj}"
                }
			steps {
                script {
                    switch("${params.Profile}") {
                    case "QA_ICDC":
                        withCredentials([file(credentialsId: 'Katalon_QA_ICDC', variable: 'pass_file')]) {
                            ////sh "cp ${pass_file} ${WORKSPACE}/Profiles/${params.Profile}.glbl"
                            }
                        break
                    
                       }
                    }
				}
			}
        stage('set Environment'){
            steps {
			
                script {

                        echo "TEST"
						////sh "wget https://github.com/katalon-studio/katalon-studio/releases/download/v7.2.6/Katalon_Studio_Engine_Linux_64-7.2.6.tar.gz && tar -xvzf Katalon_Studio_Engine_Linux_64-7.2.6.tar.gz && mv Katalon_Studio_Engine_Linux_64-7.2.6 katalon && chown -R root:root katalon"

				    }

				script {
                    switch("${params.Browser}") {
                    case "Firefox":
						//sh "wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux32.tar.gz && mv katalon/configuration/resources/drivers/firefox_linux64/geckodriver katalon/configuration/resources/drivers/firefox_linux64/geckodriver.bak && tar -C katalon/configuration/resources/drivers/firefox_linux64/ -xzf geckodriver-v0.26.0-linux32.tar.gz && chown root:root katalon/configuration/resources/drivers/firefox_linux64/geckodriver && ls -la katalon/configuration/resources/drivers/firefox_linux64/ && yum -y install firefox"
						//sh "uname -a && yum -y install firefox"
						//sh "yum -y install bzip2 gtk3 && cd /usr/local && wget http://ftp.mozilla.org/pub/firefox/releases/76.0/linux-x86_64/en-US/firefox-76.0.tar.bz2 && tar -jxf firefox-76.0.tar.bz2 && chown -R root:root /usr/local/firefox && ln -s /usr/local/firefox/firefox /usr/bin/firefox"
						////sh "yum -y install firefox"
						break
                    case "Chrome":
					    sh label: 'Install Chrome Repo', script: '''#!/bin/bash

						    # Set contents of chrome repo definition file
                            repoDef="[google-chrome]
name=google-chrome
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl.google.com/linux/linux_signing_key.pub"
							
                            # define chrome repo
			    		    echo $"$repoDef" > /etc/yum.repos.d/google-chrome.repo
                            '''
						
						sh "yum -y install google-chrome-stable && google-chrome --version && wget https://chromedriver.storage.googleapis.com/81.0.4044.138/chromedriver_linux64.zip && rm -rf katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver && unzip chromedriver_linux64.zip -d katalon/configuration/resources/drivers/chromedriver_linux64/ && chmod -x katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver && ls -la katalon/configuration/resources/drivers/chromedriver_linux64/ && ls -la katalon/configuration/resources/drivers/firefox_linux64/"
						//sh "wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm && yum -y localinstall google-chrome-stable_current_x86_64.rpm && /usr/bin/google-chrome --version && wget https://chromedriver.storage.googleapis.com/81.0.4044.138/chromedriver_linux64.zip && mv katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver.bak && unzip chromedriver_linux64.zip -d katalon/configuration/resources/drivers/chromedriver_linux64/ && ls -la katalon/configuration/resources/drivers/chromedriver_linux64/ && katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver --version"
						break
                       }
                    }

                }
            }
		stage('run tests'){
            environment {
				KATALON_BROWSER     =   "${params.Browser}"
				KATALON_PROFILE     =   "${params.Profile}"
                KATALON_PRJ         =   "${params.KatalonPrj}"
                KATALON_SUITE_PATH  =   "${params.KatalonSuite}"
                }
            steps {

				script {

					sh label: 'Katalon-Tests', script: '''#!/bin/bash

						# Set datestamp for results file
                        dateStamp=$(date +%Y%m%d%H%M)

                        # Recreate the results directory
                        rm -rf results && mkdir results
						
						# Create katalon user to run as
						echo "adding katalon user"
						useradd -p katalon katalon
						
						# assign ownership of required files to katalon user
						chown -R katalon:katalon katalon
						chown -R katalon:katalon results
						
						# Run Katalon Tests
						projectPath="$WORKSPACE/$KATALON_PRJ"
						browserType="'"$KATALON_BROWSER" (headless)'"
						reportFileName="index_$dateStamp"
						reportFolder="$WORKSPACE/results"
						echo $browserType
						runuser -l katalon -c "echo '$browserType'"
			    		#runuser -l katalon -c "$WORKSPACE/katalon/katalonc -noSplash -runMode=console -projectPath=$projectPath -retry=0 -testSuitePath=$KATALON_SUITE_PATH -browserType=$browserType -executionProfile=$KATALON_PROFILE -reportFolder=$reportFolder -reportFileName=$reportFileName -apiKey=1d9d7e79-dde9-45c1-9d21-b31424a47864"

                        '''

					}

                }
            }
        }
		post {
			always {

				publishHTML([allowMissing: true,
					alwaysLinkToLastBuild: false,
					keepAll: false,
					reportDir: 'results',
					reportFiles: 'index_*.html',
					reportName: 'HTML Report',
					reportTitles: ''])

                //emailext(attachmentsPattern: 'results/index_*.html',
                //    body: 'Katalon Test Results',
                //    subject: 'Katalon Test Results',
                //    to: 'Katalon.w1imuj982tottg1c@u.box.com')
				
				emailext(attachmentsPattern: 'results/index_*.html',
                    body: 'Katalon Test Results',
                    subject: 'Katalon Test Results',
                    to: 'michael.fleming@nih.gov')

				}
			}
	}